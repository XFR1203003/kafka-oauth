KafkaServer { // Kafka Server authentication
  org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required
    oauth.server.base.uri="http://host.docker.internal:8080/auth/realms/yoda-test/protocol/openid-connect"
    oauth.server.token.endpoint.path="/token"
    oauth.server.introspection.endpoint.path="/token/introspect"
    oauth.server.client.id="kafka-broker"
    oauth.server.client.secret="tVQUe0iUgiGZeCodssPGqs7viQUOjlQK"
    oauth.server.grant.type="client_credentials"
    oauth.server.scopes="urn:kafka:cluster:kafka-cluster:cluster_action"
    oauth.server.accept.unsecure.server="true"
    oauth.jwks.endpoint.uri="http://host.docker.internal:8080/auth/realms/yoda-test/protocol/openid-connect/certs"
    oauth.valid.issuer.uri="http://host.docker.internal:8080/auth/realms/yoda-test"
    oauth.check.audience="false";
};

Client { // Zookeeper client authentication
  org.apache.zookeeper.server.auth.DigestLoginModule required
    username="broker"
    password="Br0k3R-S3Cr3T";
};
